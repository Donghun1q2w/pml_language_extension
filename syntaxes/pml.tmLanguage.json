{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.pml",
  "name": "Programmable Macro Language",
  "fileTypes": [".pmlfrm", ".pmlmac", ".pmlfnc", ".pmlobj", ".pmldat"],
  "patterns": [{
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [{
          "name": "entity.name.function.pml",
          "match": "(?i)\\.[a-z0-9]+"
        },
        {
          "name": "keyword.control.pml",
          "match": "\\b(if|else|elseif|endif|then|set|unset|do|from|to|enddo|skip|return|is|object|endobject|value|values|indices|ind|index|val|evar|exist|exists|break|before|after|reorder|label|mode)\\b"
        },
        {
          "name": "keyword.control.pml",
          "match": "(?i)\\b(define|function|endfunction|method|endmethod|prev|next|of)\\b"
        },
        {
          "name": "keyword.control.pml",
          "match": "(?i)\\b(true|false)\\b"
        },
        {
          "name": "keyword.control.pml",
          "match": "(?i)\\b(var|switch|split|savework|getwork|unclaim|unclaim all|delete|session|current project|edit|put|compose)\\b"
        },
        {
          "name": "support.class.pml",
          "match": "(?i)\\b(left|right|top|bottom|down|centre|format|panel|path|width|tag|select|tagwidth|height|hei|name|scroll|container|columns|dock|docking|separator|fill|tabset|member|dialog|resizable|blocking|resize|size|varchars|none|all|xmin|xcen|xmax|ymin|ycen|ymax|anchor|volume|toggle|states|rtoggle|tooltip|pixmap|rgroup|list|multiple|pairs|at|area|aspect|setcolour|cursor|nocursor|borders|para|paragraph|line|horiz|lines|option|combobox|line|linklabel|vertical|horizontal|hdist|vdist|text|bar|menu|popup|add|noecho|title|icontitle|iconti|textpane|button|call|callback|init|track|cancelcall|cancel|apply|ok|nobox|indent)\\b"
        },
        {
          "name": "support.class.pml",
          "match": "(?i)\\b(FoldUpPanel|single|align|noalign)\\b"
        },
        {
          "name": "storage.modifier.pml",
          "match": "\\b(ne|eq|gt|lt|ge|geq|le|leq|not|and|or|neq)\\b"
        },
        {
          "name": "storage.modifier.pml",
          "match": "\\b(using|namespace|handle|elsehandle|endhandle|onerror|continue|golabel|exit|frame|view|setup|import|form)\\b"
        },
        {
          "name": "storage.modifier.pml",
          "match": "(?i)(?<!\\.)\\b[a-z\\d]+(?=\\()"
        },
        {
          "name": "storage.modifier.pml",
          "match": "(?i)\\b(pml|show|load|reload|loadform|cen|centred|hide|kill|free|refresh|prompt|on|off|syscom)\\b"
        },
        {
          "name": "storage.modifier.pml",
          "match": "(?i)\\b(array|string|real|bool|boolean|file|datetime|dbref|any|plane|gadget|error|MarElementHandle|empty)\\b"
        },
        {
          "name": "variable.other.pml",
          "match": "(?i)\\![a-z0-9]+"
        },
        {
          "name": "variable.other.pml",
          "match": "(?i)\\!\\<[a-z0-9]*\\>"
        },
        {
          "name": "entity.name.function.pml",
          "match": "(?i)\\!\\![a-z0-9]+"
        },
        {
          "name": "constant.numeric.decimal.pml",
          "match": "\\b[0-9]+\\b"
        },
        {
          "name": "string.quoted.pml",
          "match": "\\$"
        }
      ]
    },
    "strings": {
      "patterns": [{
          "name": "string.quoted.pml",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "string.double.quoted.pml",
          "begin": "\"",
          "end": "\""
        },
        {
          "name": "string.quoted.pml",
          "begin": "\\|",
          "end": "\\|"
        },
        {
          "name": "string.quoted.pml",
          "match": "\\$P.*"
        }
      ]
    },
    "comments": {
      "patterns": [{
          "name": "comment.line.double-slash.pml",
          "begin": "\\$\\(",
          "end": "\\$\\)"
        },
        {
          "name": "comment.line.double-slash.pml",
          "match": "(?x)\\--.*"
        }
      ]
    }
  }
}